# Feel like I should start with this
# Use ^A rather than ^B as prefix key
unbind-key C-b
set-option -g prefix C-a

# send ^A to the client (e.g. emacs start-of-line)
bind-key a send-prefix


#########################
# GENERAL CONFIGURATION #
#########################

#set -g default-terminal "screen-it"

# SESSION OPTIONS
# Set the base index from which an unused index should be searched when a new
# window is created. 
set-option -g base-index 1 

# Ignore window bells
set-option -g bell-action none

# Do not ring the terminal bell when an activity, content or silence alert
# occurs.
set-option -g bell-on-alert off

# Scrollback buffer n lines
set-option -g history-limit 100000

# A message is shown on a bell instead of it being passed through to the terminal
set-option -g visual-bell on

# MOUSE OPTIONS: Note: text-selection by default does a tmux copy (paste with prefix+]).
#                Hold alt/meta/option for system selection/copy.
# Enter copy mode and copy a selection by dragging
set-option -g mode-mouse on

# Use the mouse to select the current pane (and pass through the click as normal)
set-option -g mouse-select-pane

# allow panes to be resized by dragging on their borders
set-option -g mouse-resize-pane on

# clicking the mouse on a window name in the status line will select that window
set-option -g mouse-select-window on

# WINDOW OPTIONS
# Resize the window to the size of the smallest session for which it is the
# current window, rather than the smallest session to which it is attached.
set-window-option -g aggressive-resize on

# Use vi or emacs-style key bindings in copy and choice modes.
set-window-option -g mode-keys vi

# solarized colors
source-file ~/dotfiles/tmux/tmuxcolors.conf

##############
# STATUS BAR #
##############
# Show the status line
set-option -g status on

# Use vi key bindings in the status line
set-option -g status-keys vi

# Display a status line message when activity occurs in a window for which the
# monitor-activity window option is enabled.
set-option -g visual-activity on

# Windows with activity are highlighted in the status line.
set-window-option -g monitor-activity on

# Update the status bar every n seconds (default: 15)
set-option -g status-interval 2

# treat top-bit-set characters in the status-left and status-right strings as UTF-8
set-option -g status-utf8 on

# Set the position of the window list component of the status line
set-option -g status-justify "centre"

# Set the maximum length of the left component of the status bar
set-option -g status-left-length 60

# Set the maximum length of the right component of the status bar
set-option -g status-right-length 90

# Display string to the left of the status bar
set-option -g status-left "#(~/dotfiles/tmux/tmux-powerline/status-left.sh)"

# Display string to the right of the status bar
set-option -g status-right "#(~/dotfiles/tmux/tmux-powerline/status-right.sh)"

#######################
# WINDOW/PANE CONTROL #
#######################

unbind-key %
bind-key | split-window -h
bind-key - split-window -v

# quick pane cycling
unbind-key C-a
bind-key C-a select-pane -t :.+

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# switch windows ... although maybe I want C-l to redraw the screen
bind-key C-h previous-window
bind-key C-l next-window

# act like vim. enhance copy mode to use more vim like keys for copying
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

#######################
# GENERAL KEYBINDINGS #
#######################

# ^C to create a new window
bind-key C-c new-window

# ^D to detach
bind-key C-d detach-client

# ^R to force a reload of the config file
bind-key C-r source-file ~/.tmux.conf; display-message "source-file done"

# ^S to switch sessions
bind-key C-s choose-session

# Don't prompt ... show some balls
bind-key C-x kill-pane

# toggle synchronized panes
bind-key S set -w synchronize-panes

# Kill the session
bind-key X kill-session

# ALT-n to switch window.
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-0 select-window -t 10
